name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            target: 'aarch64-apple-darwin'
            artifact_name: 'macos-build'
            bundle_path: 'src-tauri/target/aarch64-apple-darwin/release/bundle'
          - platform: 'windows-latest'
            args: '--target x86_64-pc-windows-msvc'
            target: 'x86_64-pc-windows-msvc'
            artifact_name: 'windows-build'
            bundle_path: 'src-tauri/target/x86_64-pc-windows-msvc/release/bundle'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Install dependencies
        run: npm install

      - name: Set version
        run: node scripts/update-version.cjs
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}

      - name: Build and create release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          releaseBody: 'See the assets to download and install this version.'
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}
          includeUpdaterJson: true

      - name: Upload macOS Artifacts
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            ${{ matrix.bundle_path }}/dmg/*.dmg
            ${{ matrix.bundle_path }}/macos/*.app.tar.gz
          if-no-files-found: warn

      - name: Upload Windows Artifacts
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            ${{ matrix.bundle_path }}/nsis/*.exe
            ${{ matrix.bundle_path }}/msi/*.msi
          if-no-files-found: warn
